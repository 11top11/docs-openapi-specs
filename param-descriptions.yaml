---
request:
  fromBlock: Starting block number. Can be integer, hex, or 'latest' for the last
    mined block, 'pending', 'earliest' for not yet mined transactions.
  toBlock: Ending block number. Can be integer, hex, or 'latest' for the last mined
    block, 'pending', 'earliest' for not yet mined transactions.
  blockHash: Using blockHash is equivalent to fromBlock = toBlock = the block number
    with hash blockHash. If blockHash is present in the filter criteria, then neither
    fromBlock nor toBlock are allowed.
  getLogs_address: Contract address or a list of addresses from which logs should
    originate.
logs_response:
  blockHash: 32 Bytes - hash of the block where this log was in. null when its pending.
    null when its pending log
  removed: true when the log was removed, due to a chain reorganization. false if
    its a valid log.
  logIndex: Integer of the log index position in the block. null when its pending
    log.
  transactionIndex: Integer of the transactions index position log was created from.
    null when its pending log.
  transactionHash: Hash of the transactions this log was created from. null when its
    pending log.
  blockNumber: The block number where this log was in. null when its pending. null
    when its pending log.
  address: 20 Bytes - address from which this log originated.
  data: Contains one or more 32 Bytes non-indexed arguments of the log.
  topics: 'Array of 0 to 4 32 Bytes DATA of indexed log arguments. In solidity: The
    first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)),
    except you declare the event with the anonymous specifier.'
