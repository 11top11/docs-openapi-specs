apiKey:
  name: apiKey
  in: path
  schema:
    type: string
    default: demo
  required: true
owner:
  name: owner
  schema:
    type: string
  in: query
  required: true
wallet:
  name: wallet
  schema:
    type: string
  in: query
  required: true
pageKey:
  name: pageKey
  schema:
    type: string
  in: query
pageSize:
  name: pageSize
  schema:
    type: integer
  in: query
contractAddresses:
  name: contractAddresses[]
  schema:
    type: array
    items:
      type: string
  in: query
withMetadata:
  name: withMetadata
  schema:
    type: boolean
    default: false
  in: query
filters:
  name: filters[]
  schema:
    type: array
    items:
      type: string
      enum:
        - SPAM
        - AIRDROPS
  in: query
contractAddress:
  name: contractAddress
  description: String - Address of NFT contract.
  in: query
  schema:
    type: string
  required: true
tokenId:
  name: tokenId
  description: String - The ID of the token. Can be in hex or decimal format.
  in: query
  schema:
    type: string
  required: true
tokenType:
  name: tokenType
  description: String - 'ERC721' or 'ERC1155'; specifies type of token to query for.API requests will perform faster if this is specified.
  in: query
  schema:
    type: string
startToken:
  name: startToken
  in: query
  schema:
    type: string
limit:
  name: limit
  in: query
  schema:
    type: integer
tokenUriTimeoutInMs:
  name: tokenUriTimeoutInMs
  description: 'No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.'
  in: query
  schema:
    type: integer
withTokenBalances:
  name: withTokenBalances
  in: query
  schema:
    type: boolean
    default: false
refreshCache:
  name: refreshCache
  description: Defaults to false for faster response times.  If true will refresh metadata for given token. If false will check the cache and use it or refresh if cache doesn't exist.
  in: query
  schema:
    type: boolean
    default: false
