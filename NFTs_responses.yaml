getNFTs:
  type: object
  properties:
    ownedNfts:
      type: array
      items:
        $ref: '#/ownedNFT'
id:
  type: object
  properties:
    tokenId:
      type: string
      description: 'String - Id for NFT (hex).'
    tokenMetadata:
      type: object
      properties:
        tokenType:
          type: string
          description: "String - 'ERC721' or 'ERC1155'"
tokenUri:
  type: object
  properties:
    raw:
      type: string
      description: "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated."
    gateway:
      type: string
      description: 'String - Public gateway uri for the raw uri above.'
metadata:
  type: object
  description: 'String - Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.'
  properties:
    image:
      type: string
      description: 'String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.'
    external_url:
      type: string
      description: 'String - The image URL that appears alongside the asset image on NFT platforms.'
    background_color:
      type: string
      description: 'String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.'
    name:
      type: string
      description: 'String - Name of the NFT asset.'
    description:
      type: string
      description: 'String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)'
    attributes:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          trait_type:
            type: string
      description: 'Object - Traits/attributes/characteristics for each NFT asset.'
ownedNFT:
  type: object
  properties:
    contract:
      description: 'Object - Contract for returned NFT'
      type: object
      properties:
        address:
          type: string
          description: 'String - Address of NFT contract.'
    id: 
      $ref: '#/id'
    balance:
      type: string
      description: 'String - Token balance'
    title:
      type: string
      description: 'String - Name of the NFT asset.'
    description:
      type: string
      description: 'String - Brief human-readable description'
    tokenUri:
      $ref: '#/tokenUri'
    media:
      type: object
      properties:
        raw:
          type: string
          description: 'String - Uri representing the location of the NFT media asset. This is a backup for you to parse when the metadata field is not automatically populated.'
        gateway:
          type: string
          description: 'String - Public gateway uri for the raw asset above.'
    metadata:
      $ref: '#/metadata'
    timeLastUpdated:
      type: string
      description: 'String - ISO timestamp of the last cache refresh for the information returned in the metadata field.'
    pageKey:
      type: string
      description: 'String - UUID for pagination - returned if there are more NFTs to fetch. Max NFTs per page = 100.'
    totalCount:
      type: string
      description: 'String -Total number of NFTs owned by the given address.'
    blockHash:
      type: string
      description: 'String - The canonical head block hash of when your request was received'
    error:
      type: string
      description: 'String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.'
getContractMetadata:
  type: object
  properties:
    address:
      type: string
      description: 'String - Contract address for the queried NFT collection'
    contractMetadata:
      type: object
      properties:
        name:
          type: string
          description: 'String - NFT contract name.'
        symbol:
          type: string
          description: 'String - NFT contract symbol abbreviation.'
        totalSupply:
          type: string
          description: 'String - Total number of NFTs in a given NFT collection.'
        tokenType:
          type: string
          description: 'String - ''erc721'' or ''erc1155'' NFT token type.'
getNFTsForCollection:
  type: object
  properties:
    nfts:
      description: 'List of objects that represent NFTs stored under the queried contract address.'
      type: array
      items:
        type: object
        properties:
          id:
            $ref: '#/id'
          tokenUri:
            $ref: '#/tokenUri'
          metadata:
            $ref: '#/metadata'
    nextToken:
      type: string
      description: 'String - An offset used for pagination'
owners:
  type: object
  properties:
    ownerAddresses:
      description: 'List of all addresses that own one of the NFTs from the queried contract address.'
      type: array
      items:
        type: string
getOwnersForToken:
  type: object
  properties:
    owners:
      description: 'A list of strings representing addresses of the owners. <br/>For ERC721 tokens the list will contain just a single owner. <br/>For ERC1155 tokens the list may contain multiple owners if the ERC1155 token in question is semi-fungible or fungible.'
      type: array
      items:
        type: string
arrayList:
  type: array
  items:
    type: string
reingestContract:
  type: object
  properties:
    contractAddress:
      type: string
      description: 'String - The address of the NFT contract/collection that is refreshing.'
    reingestionState:
      type: string
      enum:
      - does_not_exist
      - already_queried
      - in_progress
      - finished
      - queued
      - queue_failed
      description: '<br/> String - The current state of the reingestion request. <br/>''does_not_exist'' - The contract requested is not an NFT and does not contain proper metadata <br/>''already_queried'' - Contract already queried <br/>''in_progress'' - Ingestion in progress <br/>''finished'' - Ingestion complete <br/>''queued'' - Ingestion request placed into queue and awaiting execution. <br/>''queue_failed'' - Queue job incomplete'
    progress:
      type: string
      description: 'String - Percentage of tokens successfully refreshed.'
getFloorPrice:
  type: object
  description: 'Name of the NFT marketplace where the collection is listed. Current marketplaces supported -  OpenSea, LooksRare'
  additionalProperties:
    type: object
    properties:
      floorPrice:
        type: number
        description: 'Number - The floor price of the collection on the given marketplace.'
      priceCurrency:
        type: string
        description: 'String - The currency in which the floor price is denominated. Typically, denominated in ETH'
        enum:
        - ETH
      collectionUrl:
        type: string
        description: 'String - Link to the collection on the given marketplace.'
      retrievedAt:
        type: string
        description: 'String - UTC timestamp of when the floor price was retrieved from the marketplace.'
      error:
        type: string
        description: 'String - Returns an error if there was an error fetching floor prices from the given marketplace.'