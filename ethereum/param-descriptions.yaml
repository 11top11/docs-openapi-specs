---
request:
  fromBlock: Starting block number. Can be integer, hex, or 'latest' for the last
    mined block, 'pending', 'earliest' for not yet mined transactions.
  toBlock: Ending block number. Can be integer, hex, or 'latest' for the last mined
    block, 'pending', 'earliest' for not yet mined transactions.
  blockHash: Using blockHash is equivalent to fromBlock = toBlock = the block number
    with hash blockHash. If blockHash is present in the filter criteria, then neither
    fromBlock nor toBlock are allowed.
  getLogs_address: Contract address or a list of addresses from which logs should
    originate.
logs_response:
  blockHash: 32 Bytes - hash of the block where this log was in. null when its pending.
    null when its pending log
  removed: true when the log was removed, due to a chain reorganization. false if
    its a valid log.
  logIndex: Integer of the log index position in the block. null when its pending
    log.
  transactionIndex: Integer of the transactions index position log was created from.
    null when its pending log.
  transactionHash: Hash of the transactions this log was created from. null when its
    pending log.
  blockNumber: The block number where this log was in. null when its pending. null
    when its pending log.
  address: 20 Bytes - address from which this log originated.
  data: Contains one or more 32 Bytes non-indexed arguments of the log.
  topics: 'Array of 0 to 4 32 Bytes DATA of indexed log arguments. In solidity: The
    first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)),
    except you declare the event with the anonymous specifier.'
eth_getBlockByHash_response:
  type: object
  description: A block object with the following fields, or null when no block was found.
  properties:
    number:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/number"
    hash:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/hash"
    parentHash:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/parentHash"
    nonce:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/nonce"
    sha3Uncles:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/sha3Uncles"
    logsBloom:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/logsBloom"
    transactionsRoot:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/transactionsRoot"
    stateRoot:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/stateRoot"
    receiptsRoot:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/receiptsRoot"
    miner:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/miner"
    difficulty:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/difficulty"
    totalDifficulty:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/totalDifficulty"
    extraData:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/extraData"
    size:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/size"
    gasLimit:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/gasLimit"
    gasUsed:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/gasUsed"
    timestamp:
      type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/timestamp"
    transactions:
      type: array
      items:
        type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/transactions"
    uncles:
      type: array
      items:
        type: string
      description:
        "$ref": "./param-descriptions.yaml#/getBlock_response/uncles"
    id:
      type: integer
    jsonrpc:
      type: string


getBlock_response:
  number: the block number. null when its pending block.
  hash: 32 Bytes - hash of the block. null when its pending block.
  parentHash: 32 Bytes - hash of the parent block.
  nonce: 8 Bytes - hash of the generated proof-of-work. null when its pending block.
  sha3Uncles: 32 Bytes - SHA3 of the uncles data in the block.
  logsBloom: 256 Bytes - the bloom filter for the logs of the block. null when its pending block.
  transactionsRoot: 32 Bytes - the root of the transaction trie of the block.
  stateRoot: 32 Bytes - the root of the final state trie of the block.
  receiptsRoot: 32 Bytes - the root of the receipts trie of the block.
  miner: 20 Bytes - the address of the beneficiary to whom the mining rewards were given.
  difficulty:  integer of the difficulty for this block.
  totalDifficulty:  integer of the total difficulty of the chain until this block.
  extraData:  the "extra data" field of this block.
  size:  integer the size of this block in bytes.
  gasLimit:  the maximum gas allowed in this block.
  gasUsed:  the total used gas by all transactions in this block.
  timestamp:  the unix timestamp for when the block was collated.
  transactions: Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.
  uncles: Array of uncle hashes.
  result: Integer of the current block number the client is on
