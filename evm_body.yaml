# ========= EVM Methods ==============
eth_blockNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_blockNumber
          enum:
            - eth_blockNumber
eth_getBlockByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockByHash
          enum:
            - eth_getBlockByHash
        params:
          type: array
          description:
            $ref: '#/blockHashAndBooleanTransaction'
          minItems: 2
          maxItems: 2
          prefixItems:
            types:
              - string
              - boolean
eth_getBlockByNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockByNumber
          enum:
            - eth_getBlockByNumber
        params:
          type: array
          description:
            $ref: '#/blockNumberBooleanTransaction'
          minItems: 2
          maxItems: 2
          prefixItems:
            types:
              - string
              - boolean
eth_getLogs:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getLogs
          enum:
            - eth_getLogs
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
eth_getTransactionByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByHash
          enum:
            - eth_getTransactionByHash
eth_getTransactionReceipt:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionReceipt
          enum:
            - eth_getTransactionReceipt
eth_getBlockTransactionCountByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockTransactionCountByHash
          enum:
            - eth_getBlockTransactionCountByHash
eth_getBlockTransactionCountByNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockTransactionCountByNumber
          enum:
            - eth_getBlockTransactionCountByNumber
eth_getTransactionCount:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionCount
          enum:
            - eth_getTransactionCount
eth_getTransactionByBlockHashAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockHash_index_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByBlockHashAndIndex
          enum:
            - eth_getTransactionByBlockHashAndIndex
eth_getTransactionByBlockNumberAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_index_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByBlockNumberAndIndex
          enum:
            - eth_getTransactionByBlockNumberAndIndex
eth_getBlockReceipts:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumberOrBlockHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockReceipts
          enum:
            - eth_getBlockReceipts
eth_sendRawTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionData_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_sendRawTransaction
          enum:
            - eth_sendRawTransaction
eth_sendPrivateTransaction:
  type: array
  minItems: 1
  maxItems: 1
  items:
    type: object
    required:
      - tx
    properties:
      method:
        type: string
        default: eth_sendPrivateTransaction
        enum:
          - eth_sendPrivateTransaction
      tx:
        type: string
        description: 'Raw, signed transaction'
      maxBlockNumber:
        type: string
        description: Hex-encoded number for highest block number in which the transaction should be included.
      preferences:
        type: object
        properties:
          fast:
            type: boolean
            description: Sends transaction with fast mode when true.
eth_cancelPrivateTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_cancelPrivateTransaction
          enum:
            - eth_cancelPrivateTransaction
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              txHash:
                type: string
                description: Transaction hash for private transaction to be cancelled.
eth_getBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBalance
          enum:
            - eth_getBalance
eth_getStorageAt:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_blockHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getStorageAt
          enum:
            - eth_getStorageAt
eth_getCode:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getCode
          enum:
            - eth_getCode
eth_accounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_accounts
          enum:
            - eth_accounts
eth_getProof:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getProof
          enum:
            - eth_getProof
        params:
          description:
            $ref: '#/address_storageKeys_blockNumber'
          type: array
          minItems: 3
          maxItems: 3
          items:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
eth_protocolVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_protocolVersion
          enum:
            - eth_protocolVersion
eth_gasPrice:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_gasPrice
          enum:
            - eth_gasPrice
eth_estimateGas_550:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/defaultBlockParam'
eth_estimateGas_5:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/defaultBlockParam'
eth_estimateGas_50:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/defaultBlockParam'
eth_feeHistory:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_feeHistory
          enum:
            - eth_feeHistory
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            required:
              - BLOCKCOUNT
              - NEWESTBLOCK
            properties:
              BLOCKCOUNT:
                type: integer
                description: Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.
              NEWESTBLOCK:
                type: integer
                format: int64
                description: Highest number block of the requested range.
              REWARDPERCENTILES:
                type: array
                description: "A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used."
                items:
                  type: number
eth_maxPriorityFeePerGas:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_maxPriorityFeePerGas
          enum:
            - eth_maxPriorityFeePerGas
eth_chainId:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_chainId
          enum:
            - eth_chainId
net_version:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: net_version
          enum:
            - net_version
net_listening:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: net_listening
          enum:
            - net_listening
eth_getUncleByBlockHashAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_uncleIndex_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleByBlockHashAndIndex
          enum:
            - eth_getUncleByBlockHashAndIndex
eth_getUncleByBlockNumberAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_uncleIndex_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleByBlockNumberAndIndex
          enum:
            - eth_getUncleByBlockNumberAndIndex
eth_getUncleCountByBlockHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleCountByBlockHash
          enum:
            - eth_getUncleCountByBlockHash
eth_getUncleCountByBlockNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleCountByBlockNumber
          enum:
            - eth_getUncleCountByBlockNumber
eth_getFilterChanges:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getFilterChanges
          enum:
            - eth_getFilterChanges
eth_getFilterLogs:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getFilterLogs
          enum:
            - eth_getFilterLogs
eth_newBlockFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newBlockFilter
          enum:
            - eth_newBlockFilter
eth_newFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newFilter
          enum:
            - eth_newFilter
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
eth_newPendingTransactionFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newPendingTransactionFilter
          enum:
            - eth_newPendingTransactionFilter
eth_uninstallFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_uninstallFilter
          enum:
            - eth_uninstallFilter
web3_clientVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: web3_clientVersion
          enum:
            - web3_clientVersion
web3_sha3:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/shaHash_param'
    - type: object
      properties:
        method:
          type: string
          default: web3_sha3
          enum:
            - web3_sha3
eth_subscribe:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_subscribe
          enum:
            - eth_subscribe
        params:
          type: array
          minItems: 1
          maxItems: 3
          items:
            oneOf:
              - type: string
                description: 'Returns the transaction information for all transactions that are added to the pending state. This subscription type subscribes to pending transactions, similar to the standard Web3 call web3.eth.subscribe(''pendingTransactions''), but differs in that it emits full transaction information rather than just transaction hashes.'
                enum:
                  - alchemy_newFullPendingTransactions
              - oneOf:
                  - type: string
                    description: 'Returns the transaction information for all transactions that are added to the pending state that match a given filter. Currently supports an address filter, which will return transactions from or to the address.'
                    enum:
                      - alchemy_filteredNewFullPendingTransactions
                  - type: object
                    properties:
                      address:
                        type: string
              - type: string
                description: Returns the hash for all transactions that are added to the pending state.
                enum:
                  - newPendingTransactions
              - type: string
                description: 'Emits an event any time a new header is added to the chain, including during a chain reorganization.'
                enum:
                  - newHeads
              - oneOf:
                  - type: string
                    description: Emits logs which are part of newly added blocks that match specified filter criteria.
                    enum:
                      - logs
                  - type: object
                    description: An object.
                    properties:
                      address:
                        description: Either a string representing an address or an array of such strings. Only logs created from one of these addresses will be emitted.
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      topics:
                        description: An array of topic specifiers.
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
              - type: string
                description: 'Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators.'
                enum:
                  - syncing
eth_unsubscribe:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/subscriptionId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_unsubscribe
          enum:
            - eth_unsubscribe
eth_getTransactionReceiptsByBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionReceiptsByBlock
          enum:
            - eth_getTransactionReceiptsByBlock
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: block_number in hex OR block_hash.
          items:
            type: string
eth_syncing:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_syncing
          enum:
            - eth_syncing

# ============ EVM Models ==============
filter_options:
  type: object
  properties:
    blockHash:
      type: string
      description: 'Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.'
    address:
      type: array
      items:
        type: string
      description: Contract address or a list of addresses from which logs should originate.
    fromBlock:
      type: string
      default: latest
      description: 'Starting block number. hex value or ''latest'' for the last mined block, ''pending'', ''earliest'' for not yet mined transactions.'
    toBlock:
      type: string
      default: latest
      description: 'Ending block number. hex value, or ''latest'' for the last mined block, ''pending'', ''earliest'' for not yet mined transactions.'
    topics:
      $ref: '#/topics'
topics:
  type: array
  description: Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.
  items:
    type: string
CommonProperties:
  type: object
  properties:
    id:
      type: integer
      default: 1
    jsonrpc:
      type: string
      default: '2.0'
defaultBlockParam:
  type: string
  description: The following options are possible for the defaultBlock parameter. An integer block number (in hex). String 'earliest' for the earliest/genesis block. String 'latest' - for the latest mined block. String 'pending' for the pending state/transactions.
eth_call_550_gas:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/defaultBlockParam'
eth_call_5_gas:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/defaultBlockParam'
eth_call_50_gas:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/defaultBlockParam'
transaction_object:
  type: object
  description: The transaction call object
  properties:
    from:
      type: string
      description: 20 Bytes - The address the transaction is sent from.
    to:
      type: string
      description: 20 Bytes - The address the transaction is directed to
    gasPrice:
      type: string
      description: |
        Integer of the gasPrice used for each paid gas.
        <br/><strong>NOTE:</strong> most of our users <b>(95%+)</b> never set the gasPrice on eth_call.
    value:
      type: string
      description: Integer of the value sent with this transaction
    data:
      type: string
      description: Hash of the method signature and encoded parameters
  required:
    - to
gas_50:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>50</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_5:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>5</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_550:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>550</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
transactionHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/transactionHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
blockNumber_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber'
      minItems: 1
      maxItems: 1
      items:
        type: string
address_blockNumber_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/address_blockNumber'
      minItems: 2
      maxItems: 2
      items:
        type: string
blockHash_index_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockHash_index'
      minItems: 2
      maxItems: 2
      items:
        type: string

blockNumber_index_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber_index'
      minItems: 2
      maxItems: 2
      items:
        type: string
blockNumberOrBlockHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumberOrBlockHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
transactionData_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/transactionData'
      minItems: 1
      maxItems: 1
      items:
        type: string
address_blockNumber_blockHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/address_blockNumber_blockHash'
      minItems: 3
      maxItems: 3
      items:
        type: string
blockNumber_uncleIndex_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber_uncleIndex'
      minItems: 2
      maxItems: 2
      items:
        type: string
filterId_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/filterId'
      minItems: 1
      maxItems: 1
      items:
        type: string
shaHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/shaHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
subscriptionId_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/subscriptionId'
      minItems: 1
      maxItems: 1
      items:
        type: string


# ============= Transaction Receipts API Method ===============
alchemy_getTransactionReceipts_param:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getTransactionReceipts
          enum:
            - alchemy_getTransactionReceipts
        params:
          type: array
          description:
            $ref: '#/alchemy_getTransactionReceipts'
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              blockNumber:
                type: string
                description: The block number you want to get transaction receipts for, in hex
                pattern: '^0[xX][0-9a-fA-F]+$'
              blockHash:
                type: string
                description: The block hash you want to get transaction receipts for

# ============= Token API Methods ===============
alchemy_getTokenAllowance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getTokenAllowance
          enum:
            - alchemy_getTokenAllowance
        params:
          type: array
          description: null
          minItems: 1
          maxItems: 1
          items:
            type: object
            required:
              - contract
              - owner
              - spender
            properties:
              contract:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token contract.'
              owner:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token owner.'
              spender:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token spender.'
alchemy_getTokenBalances:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getTokenBalances
          enum:
            - alchemy_getTokenBalances
        params:
          type: array
          description: |
            - DATA, 20 Bytes - The address for which token balances will be checked.
            - OneOf
              - Array - A list of contract addresses. Suggested limit: 100 addresses
              - The String ''DEFAULT_TOKENS'' - denotes a query for the top 100 tokens by 24 hour volume - only available on Mainnet for Ethereum, Polygon, and Arbitrum.
              - The String ''erc20'' - denotes the set of erc20 tokens that the address has ever held.
          minItems: 2
          maxItems: 3
          items:
            allOf:
              - type: string
              - oneOf:
                  - type: array
                    minItems: 1
                    maxItems: 100
                    items:
                      type: string
                  - type: string
                    enum:
                      - DEFAULT_TOKENS
                      - erc20
              - type: object
                properties:
                  pageKey:
                    type: string
                    description: 'An address used for pagination. If more results are available, a pageKey will be returned in the response.'
                    default: '0x0'
alchemy_getTokenMetadata:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getTokenMetadata
          enum:
            - alchemy_getTokenMetadata
        params:
          type: array
          description: 'DATA, 20 Bytes - Singluar address for the token contract.'
          minItems: 1
          maxItems: 1
          items:
            type: string

# ============= Trace API Methods ===============
trace_call:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_call
          enum:
            - trace_call
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/transaction_object'
                description: Call options.
              - type: array
                description: 'Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
                  enum:
                    - trace
                    - stateDiff
              - $ref: '#/defaultBlockParam'
trace_callMany:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_callMany
          enum:
            - trace_callMany
        params:
          type: array
          items:
            oneOf:
              - type: array
                description: 'List of trace calls with the type of trace, one or more of "trace or "stateDiff".'
                items:
                  type: string
                  enum:
                    - trace
                    - stateDiff
              - $ref: '#/defaultBlockParam'
trace_rawTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_rawTransaction
          enum:
            - trace_rawTransaction
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Raw transaction data.
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_replayBlockTransactions:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_replayBlockTransactions
          enum:
            - trace_replayBlockTransactions
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/defaultBlockParam'
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_replayTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_replayTransaction
          enum:
            - trace_replayTransaction
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_block:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_block
          enum:
            - trace_block
        params:
          type: array
          description: |
            Array of HEX String.
            </br>The following options are possible for the defaultBlock parameter. 
            - An integer block number (in hex)
            - String 'earliest' for the earliest/genesis block. String 'latest' - for the latest mined block. String 'pending' - for the pending state/transactions.
          items:
            $ref: '#/defaultBlockParam'
trace_filter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_filter
          enum:
            - trace_filter
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              fromBlock:
                type: string
                description: From this block
              toBlock:
                type: string
                description: To this block.
              fromAddress:
                type: string
                description: Sent from these addresses.
              toAddress:
                type: string
                description: Sent to these addresses.
              after:
                type: string
                description: The offset trace number.
              count:
                type: integer
                description: Integer number of traces to display in a batch.
trace_get:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_get
          enum:
            - trace_get
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: Array - Index positions of the traces.
                items:
                  type: string
trace_transaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_transaction
          enum:
            - trace_transaction
        params:
          type: array
          items:
            type: string
            description: Hash - Transaction hash.

# ============= Polygon API Methods ===============
bor_getAuthor:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getAuthor
          enum:
            - bor_getAuthor
        params:
          description: Array of block number (in hexadecimal format).
          type: array
          items:
            type: string
bor_getCurrentValidators:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentValidators
          enum:
            - bor_getCurrentValidators
bor_getCurrentProposer:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentProposer
          enum:
            - bor_getCurrentProposer
bor_getRootHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentProposer
          enum:
            - bor_getCurrentProposer
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getRootHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getRootHash
          enum:
            - eth_getRootHash
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getSignersAtHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getSignersAtHash
          enum:
            - eth_getSignersAtHash
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: Blockhash.
          items:
            type: string

# ============= Transfers API Methods ===============
alchemy_getAssetTransfers:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getAssetTransfers
          enum:
            - alchemy_getAssetTransfers
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/getAssetTransfers_eth_mainnet'
            
# ============= Transfers API Models ===============
getAssetTransfers_eth_mainnet:
  type: object
  required:
    - category
  properties:
    fromBlock:
      type: string
      description: 'String - Inclusive from block (hex string, int, or latest)'
      default: '0x0'
    toBlock:
      type: string
      description: 'String - Inclusive to block (hex string, int, or latest)'
      default: latest
    fromAddress:
      type: string
      description: String - From address (hex string). Default wildcard - any address
    toAddress:
      type: string
      description: String - To address (hex string). Default wildcard - any address
    contractAddresses:
      type: array
      description: 'String - List of contract addresses (hex strings) to filter for - only applies to "erc20", "erc721", "erc1155" transfers. Default wildcard - any address'
      items:
        type: string
    category:
      type: array
      description: |
        'Array of categories, can be any of the following: "external", "internal", "erc20", "erc721", "erc1155", or "specialnft". See the table above for supported categories on each network.'
      items:
        type: string
        enum:
          - external
          - internal
          - erc20
          - erc721
          - erc1155
          - specialnft
    order:
      type: string
      description: |
        String - Whether to return results in ascending (`asc`) or descending (`desc`) order. Ascending order is from oldest to newest transactions, decending order is from newest to oldest. Defaults to "asc" if omitted.
      enum:
        - asc
        - desc
    withMetadata:
      type: boolean
      description: Boolean - Whether or not to include additional metadata about each transfer event.
      default: false
    excludeZeroValue:
      type: boolean
      description: Boolean - A boolean to exclude transfers with zero value. Zero value is not the same as null value.
      default: true
    maxCount:
      type: string
      description: Max hex string number of results to return per call.
      default: '0x3e8'
    pageKey:
      type: string
      description: 'String - UUID for pagination. If more results are available, a uuid pageKey will be returned in the response. Pass that uuid into pageKey to fetch the next 1000 or maxCount.'

# ============= Debug API Methods ===============
debug_traceTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        disableStorage:
          type: boolean
          default: false
          description: 'Setting this to true will disable storage capture (default = false).'
        disableMemory:
          type: boolean
          default: false
          description: 'Setting this to true will disable memory capture (default = false).'
        disableStack:
          type: boolean
          default: false
          description: 'Setting this to true will disable stack capture (default = false).'
        tracer:
          type: string
          description: 'Setting this will enable JavaScript-based transaction tracing, described below. If set, the previous four arguments will be ignored.'
        timeout:
          type: string
          description: 'Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Valid values are described <a href="https://golang.org/pkg/time/#ParseDuration">here</a>.'

# ============= Other Definitions ===============
blockHashAndBooleanTransaction: '<br/>1. String - Hash of block <br/>2. Boolean - If true it returns the full transaction objects, if false it returns only the hashes of the transactions.'
blockNumberBooleanTransaction: '<br/>1. String - Integer of a block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. Boolean  If true it returns the full transaction objects, if false only the hashes of the transactions.'
transactionHash: String - 32 Bytes - Hash of a transaction
blockNumber: 'String - Integer of a block number, or the string ''earliest'', ''latest'' or ''pending''.'
address_blockNumber: '<br/>1. String - 20 Bytes - Address <br/>2. String - Integer block number, or the string ''latest'', ''earliest'' or ''pending''.'
blockHash_index: <br/>1. String - 32 Bytes - Hash of a block <br/>2. String - Integer of the transaction index position.
blockNumber_index: '<br/>String - 1. A block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. String - The transaction index position.'
blockNumberOrBlockHash: 'String - Block number or block hash to fetch transaction receipts for, or the string ''earliest'', ''latest'' or ''pending''.'
transactionData: String - The signed transaction data.
address_blockNumber_blockHash: '<br/>1. String - 20 Bytes - address of the storage <br/>2. String - Integer of the position in the storage. <br/>3. String - Integer block number, or the string ''latest'', ''earliest'' or ''pending''.'
address_storageKeys_blockNumber: '<br/>1. String - 20 Bytes - Address of the account <br/>2. Array - 32 Bytes - array of storage-keys which should be proofed and included <br/>3. String - Integer block number, or the string ''latest'' or ''earliest''.'
blockNumber_uncleIndex: '<br/>1. String - A block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. String - The uncle''s index position.'
filterId: String - The filter id.
shaHash: String - The data in hex form to convert into a SHA3 hash.
subscriptionId: 'String - Subscription ID, as previously returned from an eth_subscribe call.'
alchemy_getTransactionReceipts: 'The api only takes in one parameter - an object with at least a blockNumber or blockHash. If both are provided, blockHash is prioritized.'
