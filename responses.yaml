eth_getLogs:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          description: 'Array of log objects, or an empty array if nothing has changed since last poll.'
          items:
            $ref: '#/log_object'
eth_blockNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      description: Integer of the current block number the client is on.
      properties:
        result:
          type: string
          description: Integer of the current block number the client is on.
eth_block:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          $ref: '#/block_object'
log_object:
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - type: object
      properties:
        address:
          type: string
          description: 20 Bytes - address from which this log originated.
        logIndex:
          type: string
          description: Integer of the log index position in the block. null when its pending log.
        data:
          type: string
          description: Contains one or more 32 Bytes non-indexed arguments of the log.
        removed:
          type: boolean
          description: 'true when the log was removed, due to a chain reorganization. false if its a valid log.'
        topics:
          type: array
          items:
            type: string
          description: 'Array of zero to four 32 Bytes DATA of indexed log arguments. In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declare the event with the anonymous specifier.'
        transactionHash:
          type: string
          description: Hash of the transactions this log was created from. null when its pending log.
block_object:
  allOf:
    - $ref: '#/nonce_hash'
    - type: object
      description: 'A block object with the following fields, or null when no block was found.'
      properties:
        number:
          type: string
          description: the block number. null when its pending block.
        parentHash:
          type: string
          description: 32 Bytes - hash of the parent block.
        sha3Uncles:
          type: string
          description: 32 Bytes - SHA3 of the uncles data in the block.
        logsBloom:
          type: string
          description: 256 Bytes - the bloom filter for the logs of the block. null when its pending block.
        transactionsRoot:
          type: string
          description: 32 Bytes - the root of the transaction trie of the block.
        stateRoot:
          type: string
          description: 32 Bytes - the root of the final state trie of the block.
        receiptsRoot:
          type: string
          description: 32 Bytes - the root of the receipts trie of the block.
        miner:
          type: string
          description: 20 Bytes - the address of the beneficiary to whom the mining rewards were given.
        difficulty:
          type: string
          description: integer of the difficulty for this block.
        totalDifficulty:
          type: string
          description: integer of the total difficulty of the chain until this block.
        extraData:
          type: string
          description: the "extra data" field of this block.
        size:
          type: string
          description: integer the size of this block in bytes.
        gasLimit:
          type: string
          description: the maximum gas allowed in this block.
        gasUsed:
          type: string
          description: the total used gas by all transactions in this block.
        timestamp:
          type: string
          description: the unix timestamp for when the block was collated.
        transactions:
          type: array
          items:
            type: string
          description: 'Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.'
        uncles:
          type: array
          items:
            type: string
          description: Array of uncle hashes.
CommonProperties:
  type: object
  properties:
    id:
      type: integer
    jsonrpc:
      type: string
hash_number_transactionIndex:
  type: object
  properties:
    blockHash:
      type: string
      description: 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log
    blockNumber:
      type: string
      description: The block number where this log was in. null when its pending. null when its pending log.
    transactionIndex:
      type: string
      description: Integer of the transactions index position log was created from. null when its pending log.
nonce_hash:
  type: object
  properties:
    nonce:
      type: string
      description: 8 Bytes - hash of the generated proof-of-work. null when its pending block.
    hash:
      type: string
      description: 32 Bytes - hash of the block. null when its pending block.
eth_getTransactionByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: 'A transaction object, or null when no transaction was found'
          $ref: '#/transaction_object'
transaction_object:
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - $ref: '#/nonce_hash'
    - type: object
      properties:
        from:
          type: string
          description: 20 Bytes - address of the sender
        gas:
          type: string
          description: gas provided by the sender
        gasPrice:
          type: string
          description: gas price provided by the sender in Wei
        input:
          type: string
          description: the data send along with the transaction
        r:
          type: string
          description: ECDSA signature r
        s:
          type: string
          description: ECDSA signature s
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when it's a contract creation transaction
        v:
          type: string
          description: ECDSA recovery id
        value:
          type: string
          description: value transferred in Wei
transaction_receipt:
  description: 'A transaction receipt object, or null when no receipt was found'
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - type: object
      properties:
        transactionHash:
          type: string
          description: 32 Bytes - hash of the transaction
        from:
          type: string
          description: 20 Bytes - address of the sender
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when its a contract creation transaction
        cumulativeGasUsed:
          type: string
          description: The total amount of gas used when this transaction was executed in the block.
        gasUsed:
          type: string
          description: The amount of gas used by this specific transaction alone
        contractAddress:
          type: string
          description: '20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null'
        logs:
          type: array
          description: 'Array of log objects, which this transaction generated'
          items:
            $ref: '#/log_object'
        logsBloom:
          type: string
          description: 256 Bytes - Bloom filter for light clients to quickly retrieve related logs
        root:
          type: string
          description: 32 bytes of post-transaction stateroot (pre Byzantium)
        status:
          type: integer
          description: Either 1 (success) or 0 (failure)
          enum:
            - 0
            - 1
        effectiveGasPrice:
          type: string
        type:
          type: string
eth_getTransactionReceipt:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          $ref: '#/transaction_receipt'
eth_getBlockReceipts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/transaction_receipt'
eth_cancelPrivateTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: boolean
eth_getProof:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: Object
          description: An account object
          properties:
            balance:
              type: string
              description: the balance of the account
            codeHash:
              type: string
              description: 32 Bytes - hash of the code of the account. For a simple Account without code it will return '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'
            nonce:
              type: string
              description: nonce of the account.
            storageHash:
              type: string
              description: 32 Bytes - SHA3 of the StorageRoot. All storage will deliver a MerkleProof starting with this rootHash.
            accountProof:
              type: array
              items:
                type: string
              description: 'Array of rlp-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3 (address) as key.'
            storageProof:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                    description: the requested storage key
                  value:
                    type: string
                    description: the storage value
                  proof:
                    type: array
                    items:
                      type: string
                    description: 'Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as path.'
string_result_response:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
eth_feeHistory:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          required:
            - OLDESTBLOCK
            - BASEFEEPERGAS
            - GASUSEDRATIO
          properties:
            OLDESTBLOCK:
              type: integer
              format: int64
              description: Lowest number block of the returned range.
            BASEFEEPERGAS:
              type: array
              description: 'An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.'
              items:
                type: string
            GASUSEDRATIO:
              type: array
              items:
                type: number
            REWARD:
              type: array
              items:
                type: array
                items:
                  type: string
net_version:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: 'The current network id. 1 - Ethereum Mainnet, 2 - Morden Testnet (deprecated), 3 - Ropsten Testnet, 4 - Rinkeby Testnet, 42 - Kovan Testnet,'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '42'
eth_subscribe:
  type: object
  properties:
    jsonrpc:
      default: '2.0'
      type: string
      enum:
        - '2.0'
      description: Always '2.0'.
    method:
      type: string
      default: eth_subscription
      enum:
        - eth_subscription
      description: Always 'eth_subscription'.
    params:
      type: object
      properties:
        subscription:
          type: string
          description: The subscription ID returned by the eth_subscription call which created this subscription.
        result:
          description: An object whose contents vary depending on the type of subscription.
          oneOf:
            - $ref: '#/transaction_object'
            - type: string
            - $ref: '#/block_object'
            - $ref: '#/log_object'
            - type: object
              properties:
                syncing:
                  type: boolean
                status:
                  type: object
                  properties:
                    startingBlock:
                      type: integer
                    currentBlock:
                      type: integer
                    highestBlock:
                      type: integer
                    pulledStates:
                      type: integer
                    knownStates:
                      type: integer
alchemy_getTokenAllowance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: The allowance amount.
alchemy_getTokenBalances:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            address:
              type: string
              description: 'DATA, 20 Bytes - The address for which token balances were checked.'
            tokenBalances:
              type: array
              description: Array - returns an array of token balance objects. One of tokenBalance or error will be null.
              items:
                type: object
                properties:
                  contractAddress:
                    type: string
                  tokenBalance:
                    type: string
                  error:
                    type: string
alchemy_getTokenMetadata:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            name:
              type: string
              description: String - The token's name. null if not defined in the contract and not available from other sources.
            symbol:
              type: string
              description: String - The token's symbol. null if not defined in the contract and not available from other sources.
            decimals:
              type: number
              description: Number - The number of decimals of the token. null if not defined in the contract and not available from other sources.
            logo:
              type: string
              description: String - URL of the token's logo image. null if not available.
trace_call:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          $ref: '#/trace_block'
trace_block:
  type: object
  properties:
    output:
      type: string
    stateDiff:
      type: string
    trace:
      type: array
      items:
        type: object
        properties:
          action:
            $ref: '#/action_object'
          error:
            type: string
          subtraces:
            type: string
          traceAddress:
            type: array
            items:
              type: string
          type:
            type: string
    vmTrace:
      type: string
action_object:
  type: object
  properties:
    callType:
      type: string
    from:
      type: string
    gas:
      type: string
    input:
      type: string
    to:
      type: string
    value:
      type: string
trace_callMany:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/trace_block'
trace_filter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/trace_filter_object'
trace_filter_object:
  type: object
  properties:
    action:
      $ref: '#/action_object'
    blockHash:
      type: string
    blockNumber:
      type: string
    result:
      type: object
      properties:
        gasUsed:
          type: string
        output:
          type: string
        subtraces:
          type: integer
        traceAddress:
          type: array
          items:
            type: string
        transactionHash:
          type: string
        transactionPosition:
          type: string
        type:
          type: string
trace_get_object:
  type: object
  properties:
    action:
      $ref: '#/action_object'
    blockHash:
      type: string
    blockNumber:
      type: string
    result:
      type: object
      properties:
        gasUsed:
          type: string
        output:
          type: string
    subtraces:
      type: integer
    traceAddress:
      type: array
      items:
        type: string
    transactionHash:
      type: string
    transactionPosition:
      type: string
    type:
      type: string
trace_get:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          $ref: '#/trace_get_object'
trace_transaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/trace_get_object'
trace_replayBlockTransactions:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            allOf:
              - $ref: '#/trace_block'
              - type: object
                properties:
                  transactionHash:
                    type: string
getBlockHeight:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: integer
          description: A slot integer denoting the target block number.
getBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            blockhash:
              type: string
              description: Base-58 Encoded String - Blockhash of a given block.
            previousBlockhash:
              type: string
              description: 'Base-58 Encoded String - The blockhash of this block''s parent. If the parent block is not available due to ledger cleanup, this field will return "11111111111111111111111111111111".'
            parentSlot:
              type: integer
              description: u64 - The slot index of this block's parent.
            transactions:
              type: array
              items:
                type: object
                properties:
                  transaction:
                    type: object
                    description: Encoded transaction object.
                  meta:
                    $ref: '#/meta'
                  version:
                    oneOf:
                      - type: string
                      - type: number
                    description: '"legacy"|number|undefined - Transaction version.'
            signatures:
              type: array
              description: Present if "signatures" are requested for transaction details corresponding to the transaction order in the block.
              items:
                type: string
            rewards:
              $ref: '#/rewards'
            blockTime:
              type: integer
              format: int64
              nullable: true
              description: 'Estimated production time, as Unix timestamp (seconds since the Unix epoch). null if not available.'
            blockHeight:
              type: integer
              format: int64
              nullable: true
              description: The number of blocks beneath this block.
rewards:
  type: array
  description: Array of object - Object present if rewards are requested.
  items:
    type: object
    properties:
      pubkey:
        type: string
        description: Base-58 Encoded String - The public key of the account that received the reward.
      lamports:
        type: integer
        description: 'i64- Number of reward lamports credited or debited by the account, as a i64.'
      postBalance:
        type: integer
        description: u64 - Account balance in lamports after the reward was applied.
      rewardType:
        type: string
        description: 'Type of reward - ["fee", "rent", "voting", "staking"].'
        enum:
          - fee
          - rent
          - voting
          - staking
      commission:
        type: integer
        description: 'Vote account commission when the reward was credited, only present for voting and staking rewards.'
meta:
  type: object
  description: Transaction status metadata object.
  properties:
    err:
      type: string
      nullable: true
      description: 'If transaction failed, error messaage. If transaction succeeded null.'
    fee:
      type: integer
      description: u64 - Fee for this transaction.
    preBalances:
      type: array
      description: Array of u64s - Account balances from before the transaction was processed.
      items:
        type: integer
    postBalances:
      type: array
      description: Array of u64s - Account balances after the transaction was processed.
    innerInstructions:
      type: array
      nullable: true
      description: List of inner instructions. null if not enabled during this transaction
      items:
        type: string
    preTokenBalances:
      type: array
      description: List of token balances from before the transaction was processed or Undefined if token balance recording was not yet enabled during this transaction.
      items:
        type: integer
    postTokenBalances:
      type: array
      description: List of token balances from after the transaction was processed. Undefined if token balance recording was not yet enabled during this transaction
      items:
        type: integer
    logMessages:
      type: array
      nullable: true
      description: Array of string log messages. null if log message recording was not enabled during this transaction.
      items:
        type: string
    loadedAddresses:
      type: array
      description: Transaction addresses loaded from address lookup tables. Undefined if maxSupportedTransactionVersion was not set in request params.
      items:
        type: object
        properties:
          writable:
            type: array
            description: 'Array[String Base-58 Encoded Addresses] - Ordered list addresses for writable loaded accounts.'
            items:
              type: object
          readonly:
            type: array
            description: 'Array[String Base-58 Encoded Addresses] - Ordered list addresses for read only loaded accounts.'
            items:
              type: object
getBlocks:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: array
          description: 'List of confirmed blocks between the starting and ending slot (if provided) or latest confirmed block, inclusive. Maximum query range allowed is 500,000 slots.'
          items:
            type: integer
            format: int64
getBlockTime:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          description: 'i64 - Estimated production time, as a Unix timestamp (seconds since the Unix epoch. If timestamp is not availabe for this block, returns <null>'
          type: integer
          format: int64
getBlockCommitment:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            commitment:
              type: array
              nullable: true
              description: Array of u64 integers or <null> for unknown blocks.
              items:
                type: integer
                format: int64
            totalStake:
              type: integer
              format: int64
              description: 'Total active stake, in lamports, of the current epoch.'
getBlockProduction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            byIdentity:
              type: object
              description: |
                A dictionary of validator identities
                Key-> Base-58 Encoded Strings. 
                Value -> Two element arrays containing the number of leader slots and the number of blocks produced..'
            range:
              type: object
              description: Block production slot range.
              properties:
                firstSlot:
                  type: integer
                  format: int64
                  description: u64 - First slot of the block production information (inclusive).
                lastSlot:
                  type: integer
                  format: int64
                  description: u64 - Last slot of block production information (inclusive).
isBlockhashValid:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: boolean
          description: True if the blockhash is still valid.
getAccountInfo:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          description: A JSON object.
          properties:
            context:
              $ref: '#/context'
            value:
              $ref: '#/accountValue'
context:
  type: object
  properties:
    slot:
      type: integer
      format: int64
accountValue:
  type: object
  properties:
    lamports:
      type: integer
      format: int64
      description: u64 - Number of lamports assigned to this account.
    owner:
      type: string
      description: Base-58 Encoded String - Pubkey of the program this account has been assigned to.
    data:
      description: |
        [string, encoding]|object - Data associated with the account, either as encoded binary data or JSON format {<program>: <state>}, depending on encoding parameter.
      type: array
      items:
        'oneOf:data':
          - type: string
          - type: object
    executable:
      type: boolean
      description: Indicates if the account contains a program (and is strictly read-only).
    rentEpoch:
      type: integer
      description: 'u64, The epoch at which this account will next owe rent.'
getBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: number
getMultipleAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          description: A JSON object.
          properties:
            context:
              $ref: '#/context'
            value:
              type: array
              items:
                $ref: '#/accountValue'
getProgramAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          description: A JSON object.
          properties:
            pubkey:
              type: string
              description: Base-58 Encoded String - The account Pubkey.
            account:
              $ref: '#/accountValue'
getVoteAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                votePubkey:
                  type: string
                  description: Base-58 Encoded String - Vote account address.
                nodePubkey:
                  type: string
                  description: 'Base-58 Encoded String - Validator identity, as base-58 encoded string.'
                activatedStake:
                  type: integer
                  format: int64
                  description: 'u64 - The stake, in lamports, delegated to this vote account and active in this epoch.'
                epochVoteAccount:
                  type: boolean
                  description: Whether the vote account is staked for this epoch.
                commission:
                  type: number
                  description: Percentage (0-100) of rewards payout owed to the vote account.
                lastVote:
                  type: integer
                  format: int64
                  description: Most recent slot voted on by this vote account.
                epochCredits:
                  type: array
                  description: 'Array -  History of how many credits earned by the end of each epoch, as an array of arrays containing - [epoch, credits, previousCredits]'
                  items:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      type: integer
getLargestAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    description: 'Base-58 Encoded String, Address of the account.'
                  lamports:
                    type: integer
                    format: int64
                    description: 'u64, Number of lamports in the account.'
getClusterNodes:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              pubkey:
                type: string
                description: Base-58 Encoded String - Node public key.
              gossip:
                type: string
                nullable: true
                description: Node gossip network address.
              tpu:
                type: string
                nullable: true
                description: Node TPU network address.
              rpc:
                type: string
                nullable: true
                description: 'JSON RPC network address for the node, or null if the JSON RPC service is not enabled.'
              version:
                type: string
                nullable: true
                description: 'The software version of the node, or null if the version information is not available.'
              featureSet:
                type: integer
                format: int32
                nullable: true
                description: The unique identifier of the node's feature set.
              shredVersion:
                type: integer
                format: int16
                description: The configured shred version for the node.
getVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            solana-core:
              type: string
              description: String - Software version of solana-core.
            feature-set:
              type: string
              description: 'u64, Unique identifier of the current software''s feature set.'
getEpochInfo:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            absoluteSlot:
              type: integer
              format: int64
              description: u64 - The current slot.
            blockHeight:
              type: integer
              format: int64
              description: u64 - The current block height.
            epoch:
              type: integer
              format: int64
              description: u64 - The current epoch.
            slotIndex:
              type: integer
              format: int64
              description: u64 - The current slot relative to the start of the current epoch.
            slotsInEpoch:
              type: integer
              format: int64
              description: u64 - The number of slots in this epoch.
            transactionCount:
              type: integer
              format: int64
              nullable: true
              description: u64 | null - Total number of transactions processed without error since genesis.
getEpochSchedule:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            slotsPerEpoch:
              type: integer
              format: int64
              description: u64 - The maximum number of slots in each epoch.
            leaderScheduleSlotOffset:
              type: integer
              format: int64
              description: u64 - The number of slots before beginning of an epoch to calculate a leader schedule for that epoch.
            warmup:
              type: boolean
              description: Boolean - Whether epochs start short and grow.
            firstNormalEpoch:
              type: integer
              format: int64
              description: u64 - First normal-length epoch => log2(slotsPerEpoch) - log2(MINIMUM_SLOTS_PER_EPOCH).
            firstNormalSlot:
              type: integer
              format: int64
              description: u64 - Minimum slots per epoch * (2.pow(firstNormalEpoch) - 1).
getFeeForMessage:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: integer
              format: int64
              nullable: true
              description: u64 - Fee corresponding to the message at the specified blockhash.
getFirstAvailableBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      nullable: true
      properties:
        result:
          type: integer
          format: int64
          description: u64 - Slot of the lowest confirmed block.
getGenesisHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: Base-58 Encoded String - A transaction hash.
getHighestSnapshotSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            full:
              type: integer
              format: int64
              description: u64 - Highest full snapshot slot.
            incremental:
              type: integer
              format: int64
              nullable: true
              description: u64 | undefined - Highest incremental snapshot slot based on full if available.
getMinimumBalanceForRentExemption:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: integer
          format: int64
          description: u64 - Minimum lamports required in account.
getRecentPerformanceSamples:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          description: Array of RpcPerfSample objects.
          items:
            type: object
            properties:
              slot:
                type: integer
                format: int64
                description: u64 - Slot in which sample was taken at.
              numTransactions:
                type: integer
                format: int64
                description: u64 - Number of transactions in sample.
              numSlots:
                type: integer
                format: int64
                description: u64 - Number of slots in sample.
              samplePeriodSecs:
                type: integer
                format: int16
                description: u16 - Number of seconds in a sample window.
getHealth:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: 'String - If the node is healthy, returns "ok"; otherwise, a JSON RPC error response is returned.'
getIdentity:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            identity:
              type: string
              description: 'Base-58 Encoded String, The identity pubkey of the current node.'
getInflationGovernor:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            initial:
              type: number
              description: f64 - The initial inflation percentage from time 0.
            terminal:
              type: number
              description: f64 - Terminal inflation percentage.
            taper:
              type: number
              description: f64 - Rate per year at which inflation is lowered. Rate reduction is derived using the target slot time in genesis config.
            foundation:
              type: number
              description: f64 - Percentage of total inflation allocated to the foundation.
            foundationTerm:
              type: number
              description: f64 - Duration of foundation pool inflation in years.
getInflationRate:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            total:
              type: number
              description: f64 - Total inflation.
            validator:
              type: number
              description: f64 - Inflation allocated to validators.
            foundation:
              type: number
              description: f64 - Inflation allocated to the foundation.
            epoch:
              type: integer
              format: int64
              description: u64 - Epoch for which these values are valid.
getInflationReward:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            epoch:
              type: integer
              description: u64 - Epoch for which reward occured.
            effectiveSlot:
              type: itneger
              format: int64
              description: u64 - The slot in which the rewards are effective.
            amount:
              type: integer
              format: int64
              description: u64 - Reward amount in lamports.
            postBalance:
              type: integer
              format: int64
              description: u64 - Post balance of the account in lamports.
            commission:
              type: integer
              format: int8
              nullable: true
              description: u8|undefined - Vote account commission when the reward was credited.
getSupply:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                  description: u64 - Total supply in lamports.
                circulating:
                  type: integer
                  format: int64
                  description: u64 - Circulating supply in lamports.
                nonCirculating:
                  type: integer
                  format: int64
                  description: u64 - Non-circulating supply in lamports.
                nonCirculatingAccounts:
                  type: array
                  items:
                    type: string
                  description: 'An array of account addresses of non-circulating accounts, as strings. If excludeNonCirculatingAccountsList is enabled, the returned array will be empty.'
getSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: u64 - Current slot.
getSlotLeader:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: Base-58 Encoded String - Node identity Pubkey.
getSlotLeaders:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          description: Array of Base-58 Encoded Strings - Node identity public keys.
          items:
            type: string
getMaxRetransmitSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: u64 - Slot.
minimumLedgerSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: u64 - Minimum ledger slot.
getTokenAccountBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: object
              properties:
                amount:
                  type: string
                  description: u64 String - The raw balance without decimals.
                decimals:
                  type: number
                  description: u8 - Number of base 10 digits to the right of the decimal place.
                uiAmountString:
                  type: string
                  description: 'The balance as a string, using mint-prescribed decimals.'
getTokenAccountsByOwner:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: object
              properties:
                account:
                  $ref: '#/accountValue'
getTokenSupply:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: object
              properties:
                amount:
                  type: integer
                  format: int64
                  description: u64 String - The raw balance without decimals.
                decimals:
                  type: number
                  description: u8 - Number of base 10 digits to the right of the decimal place.
                uiAmountString:
                  type: string
                  description: 'String - The balance as a string, using mint-prescribed decimals.'
getSignaturesForAddress:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              signature:
                type: string
                description: Base-58 Encoded String - Transaction signature as
              slot:
                type: integer
                format: int64
                description: u64 - The slot that contains the block with the transaction.
              err:
                type: string
                nullable: true
                description: 'Error if transaction failed, null if transaction succeeded.'
              memo:
                type: string
                nullable: true
                description: 'Memo associated with the transaction, null if no memo is present.'
              blockTime:
                type: integer
                format: int64
                nullable: true
                description: 'Estimated production time, as Unix timestamp (seconds since the Unix epoch) of when transaction was processed. null if not available.'
getSignatureStatuses:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: array
              items:
                type: object
                properties:
                  slot:
                    type: integer
                    format: int64
                    description: u64 - The slot the transaction was processed.
                  confirmations:
                    type: number
                    nullable: true
                    description: 'usize | null - Number of blocks since signature confirmation, null if rooted, as well as finalized by a supermajority of the cluster.'
                  err:
                    type: string
                    nullable: true
                    description: 'Error if transaction failed, null if transaction succeeded.'
                  confirmationStatus:
                    type: string
                    nullable: true
                    description: 'The transaction''s cluster confirmation status; either processed, confirmed, or finalized. See Commitment for more on optimistic confirmation.'
sendTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: string
          description: Base-58 Encoded String - First Transaction Signature embedded in the transaction  (transaction id).
simulateTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          properties:
            context:
              $ref: '#/context'
            value:
              type: object
              nullable: true
              properties:
                error:
                  type: object
                  nullable: true
                  description: 'Error if transaction failed, null if transaction succeeded.'
                logs:
                  type: array
                  nullable: true
                  description: 'Array of log messages the transaction instructions output during execution, null if simulation failed before the transaction was able to execute (for example due to an invalid blockhash or signature verification failure).'
                  items:
                    type: string
                accounts:
                  type: object
                  nullable: true
                  description: Array of accounts with the same length as the accounts.addresses array in the request.
                  properties:
                    lamports:
                      type: integer
                      format: int64
                      description: Number of lamports assigned to this account.
                    owner:
                      type: string
                      description: 'Base-58 Encoded String, Pubkey of the program this account has been assigned to.'
                    data:
                      description: |
                        [string, encoding]|object - Data associated with the account, either as encoded binary data or JSON format {<program>: <state>}, depending on encoding parameter.
                      type: array
                      items:
                        'oneOf:data':
                          - type: string
                          - type: object
                    executable:
                      type: boolean
                      description: Indicates if the account contains a program (and is strictly read-only).
                    rentEpoch:
                      type: integer
                      description: 'u64, The epoch at which this account will next owe rent.'
                unitsConsumed:
                  type: integer
                  format: int64
                  nullable: true
                  description: The number of compute budget units consumed during the processing of this transaction.
getTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          type: object
          nullable: true
          properties:
            slot:
              type: integer
              format: int64
              description: The slot this transaction was processed in.
            transaction:
              type: object
              description: 'Tx object, either in JSON format or encoded binary data, depending on encoding parameter.'
            blockTime:
              type: integer
              format: int64
              nullable: true
              description: 'Estimated production time, as Unix timestamp (seconds since the Unix epoch) of when the transaction was processed.'
            meta:
              allOf:
                - $ref: '#/meta'
                - type: object
                  properties:
                    rewards:
                      $ref: '#/rewards'
            version:
              type: number
              nullable: true
              description: Transaction version. Undefined if maxSupportedTransactionVersion is not set in request params.
bor_getAuthor:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: AUTHOR - address.
          type: string
bor_getCurrentValidators:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: List of current validators.
          type: array
          items:
            type: object
            properties:
              ID:
                type: integer
              signer:
                type: string
              power:
                type: integer
              accum:
                type: integer
bor_getCurrentProposer:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: AUTHOR - address.
          type: string
bor_getRootHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: Hash
          type: string
eth_getSignersAtHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: List of HASH.
          type: array
          items:
            type: string
eth_getTransactionReceiptsByBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: Array of transaction receipt objects.
          type: array
          items:
            $ref: '#/transaction_receipt'
eth_syncing:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        result:
          description: An object with sync status data or FALSE, when not syncing.
          oneOf:
          - type: object
            properties:
              startingBlock:
                type: string
                description: 'The block at which the import started (will only be reset, after the sync reached his head).'
              currentBlock:
                type: string
                description: 'The current block, same as eth_blockNumber'
              highestBlock:
                type: string
                description: 'The estimated highest block.'
          - type: boolean
alchemy_getAssetTransfers:
  allOf:
  - $ref: '#/CommonProperties'
  - type: object
    properties:
      result:
        type: object
        description: 'An object with the following fields.'
        properties:
          pageKey:
            type: string
            description: 'Uuid of next page of results (if exists, else blank).'
          transfers:
            type: array
            description: 'Array of objects - sorted in ascending order by block number, ties broken by category (external , internal, token transfers).'
            items:
              $ref: '#/transfer'
transfer:
  type: object
  properties:
    category:
      type: string
      description: '''external'', ''internal'', ''token'', ''erc20'', ''erc721'', ''erc1155'', ''specialnft'' - label for the transfer.'
    token:
      type: string
      description: '''includes ''erc20'' and ''erc721'' transfers.'
    blockNum:
      type: string
      description: 'The block where the transfer occurred (hex string).'
    from:
      type: string
      description: 'From address of transfer (hex string).'
    to:
      type: string
      description: 'To address of transfer (hex string). null if contract creation.'
    value:
      type: string
      nullable: true
      description: 'Converted asset transfer value as a number (raw value divided by contract decimal). null if ERC721 transfer or contract decimal not available.'
    erc721TokenId:
      type: string
      nullable: true
      description: 'Raw ERC721 token id (hex string). null if not an ERC721 token transfer.'
    erc1155Metadata:
      type: string
      nullable: true
      description: 'A list of objects containing the ERC1155 tokenId (hex string) and value (hex string). null if not an ERC1155 transfer.'
    tokenId:
      type: string
      description: 'Token ID for ERC721 (or other NFT) tokens.'
    asset:
      type: string
      nullable: true
      description: 'ETH or the token''s symbol. null if not defined in the contract and not available from other sources.'
    hash:
      type: string
      description: 'Transaction hash (hex string).'
    rawContract:
      type: object
      properties:
        value:
          type: string
          nullable: true
          description: 'Raw transfer value (hex string). null if ERC721 or ERC1155 transfer.'
        address:
          type: string
          nullable: true
          description: 'Contract address (hex string). null if external or internal transfer.'
        decimal:
          type: string
          nullable: true
          description: 'Contract decimal (hex string). null if not defined in the contract and not available from other sources.'
    metadata:
      type: object
      properties:
        blockTimestamp:
          type: string
          description: 'Timestamp of the block from which the transaction event originated (ISO-formatted timestamp).'
debug_traceTransaction:
  type: object
  properties:
    gas:
      type: integer
      format: int32
    returnValue:
      type: string
    structLogs:
      type: array
      items:
        type: object
        properties:
          depth:
            type: integer
            description: 'The execution depth'
          error:
            type: string
            description: 'If an error occurred, information about the error.'
          gas:
            type: integer
            description: 'Number, the amount of gas remaining.'
          gasCost:
            type: integer
            description: 'Number, the cost in wei of each unit of gas.'
          memory:
            type: object
            nullable: true
            description: 'Object, a structure representing the contract''s memory space'
          op:
            type: object
            description: 'Object, an OpCode object representing the current opcode.'
          pc:
            type: integer
            description: 'Number, the current program counter.'
          stack:
            type: array
            items:
              type: string
            description: 'Array[big.Int], the EVM execution stack.'
          storage:
            type: object